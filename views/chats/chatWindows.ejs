<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta http-equiv="X-UA-Compatible" content="IE=edge" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <!-- Fontawesome -->
  <script src="https://kit.fontawesome.com/42a182743f.js" crossorigin="anonymous"></script>
  <!-- Google font -->
  <link rel="preconnect" href="https://fonts.googleapis.com" />
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
  <link href="https://fonts.googleapis.com/css2?family=Noto+Sans&family=Roboto:wght@400;500&display=swap" rel="stylesheet" />
  <link rel="stylesheet" href="/css/postDetails.css" />
  <link rel="stylesheet" href="/css/chat.css" /> <!-- Add custom CSS for chat -->
  <title>Chat with Author</title>
</head>
<body>
  <!-- Chat messages -->
  <div class="chat-messages" id="chat-messages">
    <% for (let chat of chats) { %>
      <div class="message <%= chat.fromUser._id.equals(userAuth) ? 'message-right' : 'message-left' %>">
        <div class="message-info">
          <img class="profile-image" src="<%= chat.fromUser.profileImage %>" alt="<%= chat.fromUser.fullname %>" />
          <p><%= chat.fromUser.fullname %></p>
          <p class="message-time"><%= formatDate(chat.createdAt) %></p>
        </div>
        <div class="message-content">
          <p><%= chat.message %></p>
        </div>
      </div>
    <% } %>
  </div>

  <form id="chat-form" class="chat-form">
    <div class="input-container">
      <input type="file" id="image-input" name="image" accept="image/*">
      <textarea id="message-input" name="message" placeholder="Type a message..."></textarea>
    </div>
    <button type="button" id="send-btn">Send</button>
  </form>
  
  

  <script>
    // 创建 WebSocket 连接
    const ws = new WebSocket('ws://localhost:8080');

    // 获取URL中的作者ID
    const urlParams = new URLSearchParams(window.location.search);
    const authorID = urlParams.get('authorID');

    const currentUser = {
      _id: '<%= userAuth %>'
    };

    const chatMessages = document.getElementById('chat-messages');

    // Function to add a new message to the chat
    const appendMessage = (message, isCurrentUser) => {
      const messageDiv = document.createElement('div');
      messageDiv.classList.add('message');
      if (isCurrentUser) {
        messageDiv.classList.add('message-right');
      } else {
        messageDiv.classList.add('message-left');
      }
      messageDiv.innerHTML = `<p>${message}</p>`;
      chatMessages.appendChild(messageDiv);
      // Scroll to the bottom of the chat messages
      chatMessages.scrollTop = chatMessages.scrollHeight;
    };

    const handleFormSubmit = (e) => {
  console.log('Form submitted'); // 添加日志
  e.preventDefault();
  const messageInput = document.getElementById('message-input');
  const message = messageInput.value.trim();
  const imageInput = document.getElementById('image-input');
  const image = imageInput.files[0];
  
  const formData = {
    fromUser: currentUser._id,
    toUser: authorID,
    message: message,
    messageType: 'text'
  };

  console.log('Form data:', formData); // 添加日志
  
  if (image) {
    const reader = new FileReader();
    reader.onload = () => {
      formData.messageType = 'image';
      formData.message = reader.result; // Base64 encoded image data
      console.log('Form data with image:', formData); // 添加日志
      sendMessage(formData);
    };
    reader.readAsDataURL(image);
  } else {
    console.log('Form data without image:', formData); // 添加日志
    sendMessage(formData);
  }
};


// 提取发送消息的函数
const sendMessage = (data) => {
  // 发送消息到服务器
  ws.send(JSON.stringify(data));
};


    // Event listener for form submission (sending a message)
    const chatForm = document.getElementById('chat-form');
    chatForm.addEventListener('submit', handleFormSubmit);

    // 监听来自服务器的消息
    ws.addEventListener('message', (event) => {
      const message = JSON.parse(event.data);
      if (message.message) {
        appendMessage(message.message, false);
      }
    });
  </script>
</body>
</html>
